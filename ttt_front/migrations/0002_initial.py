# Generated by Django 4.2 on 2023-04-17 20:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ttt_front', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artiste',
            fields=[
                ('id_artiste', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(blank=True, max_length=50, null=True)),
                ('image_artiste', models.CharField(blank=True, max_length=50, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('lien_artiste', models.CharField(blank=True, max_length=255, null=True)),
                ('suppr', models.IntegerField()),
            ],
            options={
                'db_table': 'artiste',
            },
        ),
        migrations.CreateModel(
            name='Cassette',
            fields=[
                ('id_cassette', models.AutoField(primary_key=True, serialize=False)),
                ('titre', models.CharField(blank=True, max_length=50, null=True)),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
                ('longueur', models.CharField(blank=True, max_length=10, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('lien_bandcamp', models.CharField(blank=True, max_length=255, null=True)),
                ('lien_soundcloud', models.CharField(blank=True, max_length=255, null=True)),
                ('lien_youtube', models.CharField(blank=True, max_length=255, null=True)),
                ('date_sortie', models.DateField(blank=True, null=True)),
                ('image_pochette', models.CharField(blank=True, max_length=50, null=True)),
                ('download', models.CharField(blank=True, max_length=50, null=True)),
                ('nombre_de_download', models.IntegerField()),
                ('prix', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('sold_out', models.IntegerField()),
                ('suppr', models.IntegerField()),
                ('publier', models.IntegerField(blank=True, null=True)),
                ('nombre_exemplaire', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cassette',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id_event', models.AutoField(primary_key=True, serialize=False)),
                ('date_event', models.DateField(blank=True, null=True)),
                ('lieu', models.CharField(blank=True, max_length=255, null=True)),
                ('titre_event', models.CharField(blank=True, max_length=255, null=True)),
                ('description_event', models.TextField(blank=True, null=True)),
                ('image_event', models.CharField(blank=True, max_length=255, null=True)),
                ('suppr', models.IntegerField()),
            ],
            options={
                'db_table': 'event',
            },
        ),
        migrations.CreateModel(
            name='FraisDePort',
            fields=[
                ('id_frais_de_port', models.AutoField(primary_key=True, serialize=False)),
                ('nom_destination', models.CharField(blank=True, max_length=25, null=True)),
                ('montant_frais_de_port', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
            ],
            options={
                'db_table': 'frais_de_port',
            },
        ),
        migrations.CreateModel(
            name='Produire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_artiste', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ttt_front.artiste')),
                ('id_cassette', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ttt_front.cassette')),
            ],
            options={
                'db_table': 'produire',
                'unique_together': {('id_cassette', 'id_artiste')},
            },
        ),
    ]
